name: 'Make a Github Release'

on:
  workflow_call:
    inputs:
    # Git Tag to use for the GH Release
      tag:
        required: true
        type: string
        description: 'Git Tag to use for the GH Release'
    # whether to make a Draft Release or not
      draft:
        default: false
        required: false
        type: boolean
        description: 'Whether to make a Draft Release or not'
    # Artifacts to download and then bundle in the GH Release
      artifact:
        required: false
        type: string
        description: 'Name of the Artifact to download from CI, and then bundle in the GH Release'
    secrets:
      gh_token:
        required: false
        description: 'GitHub Token, with permissions to create Releases'


jobs:
  gh_release:
    name: 'GH Release'
    runs-on: ubuntu-latest
    steps:
      # Download Artifacts from CI
      - name: Download built Distro Artifacts
        if: ${{ inputs.artifact }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact }}
          path: dist-local

      - run: ls -l dist-local
        if: ${{ inputs.artifact }}

      - uses: actions/checkout@v4

      - name: Create a Github Release, from Tag on Master
      # To be consistent with already published GH Releases at time of writing (2024/01):
      # * ommit --title flag so in github UI, content start direclty below the
      #   git tag, which is rendered as the top section rendered as clickable link
      # * use --generate-notes to generate the automatic content
      # * ommit --notes-start-tag string param

      # * fails if tag not pushed on remote
      # * here we Prepend some content passed as --notes string param above the
      #   auto-generated notes content
        run: |
          gh release create "${{ inputs.tag }}" ${{ (inputs.artifact && 'dist-local/*') || '' }} --verify-tag \
            --generate-notes ${{ inputs.draft && '--prerelease' || '' }} \
            --notes "Release Notes: ${{ github.event.head_commit.message }}"
      # use  -p, --prerelease  to publish it as pre-release
      # use  -F, --notes-file file   to possibly Prepend content from file
        env:
          GH_TOKEN: ${{ secrets.gh_token || github.token }}
