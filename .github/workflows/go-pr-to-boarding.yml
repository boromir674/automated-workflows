#########################
## Open PR to Boarding ##
#########################

on:
  workflow_call:
    inputs:
      boarding_branch:
        default: 'boarding-auto'
        type: string
        description: 'Name of the Boarding Branch. Example: boarding-auto, boarding'
        required: false
      main_branch:
        default: 'main'
        type: string
        description: 'Name of the Main Branch. Example: main, master'
        required: false
    secrets:
      github_pat:
        description: 'GitHub Token, with permissions to create PRs and push to the repository'
        required: true

jobs:
  boarding_area:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags and branches
          set-safe-directory: ''  # `git config --global --add safe.directory <path>`
          token: '${{ secrets.github_pat }}'  # PAT with permissions to create PRs

      # Find Upstream Branch, pointing to the same commit as the Pushed Tag
      - name: Discover User's Branch Name
        id: user_branch
        run: echo USER_BRANCH="$(git branch -a --contains "$(git rev-parse HEAD)" | sed -n '2p' | sed 's/.*origin\///')" >> $GITHUB_OUTPUT
          name=$(git branch -a --contains "$(git rev-parse HEAD)" | sed -n '2p' | sed 's/.*origin\///')
          echo "NAME:" $name
          echo USER_BRANCH=$name >> $GITHUB_OUTPUT

      - name: "Exit Job, if User Branch is empty: '${{ steps.user_branch.outputs.USER_BRANCH }}'"
        if: steps.user_branch.outputs.USER_BRANCH == ''
        run: echo "[ERROR] User Branch not found. Searched for an Upstream branch, but was not found on the remote. Exiting.." && exit 1

      # Ensure Upstream 'Boarding' Branch exists
      - run: git branch --track ${{ inputs.boarding_branch }} "origin/${{ inputs.boarding_branch }}" || echo "Remote Branch '${{ inputs.boarding_branch }}' does not exist"
      - run: git checkout -b ${{ inputs.boarding_branch }} ${{ inputs.main_branch }} || true

      ############## PR ##############
      - name: 'Open PR ${{ steps.user_branch.outputs.USER_BRANCH }}  -->  ${{ inputs.boarding_branch }}, to classify file changes'
        env:
          GITHUB_TOKEN: ${{ secrets.github_pat }}
        run: |
          gh pr create --head "${{ steps.user_branch.outputs.USER_BRANCH }}" --base "${{ inputs.boarding_branch }}" \
            --title "Boarding Area: Merging '${{ steps.user_branch.outputs.USER_BRANCH }}' into '${{ inputs.boarding_branch }}' Branch" \
            --body "## :train: Boarding Area :train:

          This PR is automatically generated by a GitHub Action workflow. It's part of the process of putting changes onto the **Boarding Auto** branch, setting the stage for the next steps in our GitOps journey.

          ### What's Happening Here?

          - We're merging changes from `${{ steps.user_branch.outputs.USER_BRANCH }}` into the `${{ inputs.boarding_branch }}` branch.
          - The PR is automatically labeled and classified, to help us understand the nature of the changes.
          - The labels applied to this PR, signal what Automated Tests to run as Check before Mering into the Release Train.

          ### Type of Changes

          - Source Distribution
          - Documentation

          ### :white_check_mark: Automatic Merging :white_check_mark:

          - This PR is designed to **automatically merge** once all CI checks pass.
          "
